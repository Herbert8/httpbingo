This application is a Golang implementation of "httpbin". Used to echo the
received HTTP request information in the form of JSON, so that the HTTP client
can easily see the reception of the request sent by itself, and facilitate the
debugging of its own HTTP request.

Usage of httpbin_go server:
  -h	Display this help screen
  -p	Bind and listen for incoming requests (default 8080)

HTTP client use example:

  - Show full HTML help page
  Use a web browser to visit ${base_url}/help

  - Get complete information of client request
  $ curl --data-urlencode "param1=content1" --data-urlencode "param2=content2" "${base_url}/anything?arg1=val1&arg2=val2"

  - Get the cookie information requested by the client
  $ curl "${base_url}/cookies"

  - Let the server return the Redirect command
  $ curl -iL "${base_url}/redirect-to?url=${base_url}/anything&status_code=302"

  - Specify the server to set cookies through Response
  $ curl -iL -c "cookie.txt" "${base_url}/cookies/set?key1=val1&key2=val2"

  - Specify the server to set cookies through Response, you can set cookie details
  $ curl -iL -c "cookie.txt" "${base_url}/cookies/set-detail/key/value?secure=0&httponly=1"

  - Specify to let the server delete cookies through Response
  $ curl -iL -c "cookie.txt" "${base_url}/cookies/delete?key1=&key2="